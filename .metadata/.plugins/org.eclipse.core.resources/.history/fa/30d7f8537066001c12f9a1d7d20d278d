package com.devsuperior.dsclient.service;

import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.devsuperior.dsclient.dto.ClientDTO;
import com.devsuperior.dsclient.entities.Client;
import com.devsuperior.dsclient.repository.ClientRepository;

@Service
public class ClientService {
	
	@Autowired
	ClientRepository repository;

	public Page<ClientDTO> fildAllPaged(PageRequest pageRequest) {
	    Page<Client> list = repository.findAll(pageRequest);
	    return list.map(x -> new ClientDTO(x));
	}
	
	 @Transactional(readOnly = true)
	 public ClientDTO findById(Long id) {
	     Optional<Client> obj = repository.findById(id);
	        Client entity = obj.orElseThrow(() -> new ResourceNotFoundException("Entity not found")); 
	     return new Client(entity);
	 }

}
